<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBhMSERQUERQVFBUVGBQZGBYWGBQdHRgfFRYWGB8iHRYY
        HCgeGBolHBQYHzMhLDMqLCwsFSAxNTAqNSYrLCn/2wBDAQkKCg4LDhkPDxo0JR4kNTQ0NDQvLCkyNDQt
        LzQsLDIsLC8sKi0pKiwvLC81NSwsKSwpLDQqLCwsNCwuLSksKTL/wAARCABgAGADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3GiiigArI1PxXawNtklG7+6Mkj6gdKg8Za79nt22MBK4Ij+vc
        +2M14hLI6sd+cnnPXOffvXBisX7J8kNzqo0Odc0tj3C18a2khwJMf7wI/WtqKUMAVIIPQg5H514DZ32D
        XXaDr7wnchyP4k7MP6N71zUswle1RfcaTwqt7rPU6KitblZEV0OVYAg+xqWvYTucIUUUUAFFFFABRRRQ
        B5V8Ubgi7QHp5Yx+ZzW/Y+GIpbKKOZASVznuC3PB/Gk+I2gec1tKBnbIiP8A7rsP8/jW0JcHFeRVpqFa
        Un1PQpy5qaS6HkPiXwrNZNk5eIniQdvZvQ1DpepV7OzBgQwBB6gjIP4GuM8XeD7dYi9tERKSoAQtjk8/
        L0FYSpp6xNFJ7M6X4eXm+1K/885HUfQ4b/2auorn/BGgm0tQrffY7m+pA/oBV688SW0Rw8qA+gOT+lev
        BqlTSm7HnyXPN8ppUVnWXiG3lOI5VJ9M4P5GtGtYzjNXi7kNOO4UUUVQgooooAr6gmY24zxn8uf6Vz4l
        DDchyDXTSSBRliAPUkD+dc3LapJI7WpBPBbbjGeeozz9a48XRc43XQ6cPUUHZiCU1PY4aVVzz94jvgf/
        AF6qxWU7MVIVcYztwTz9TxWhpoigLb/kdiMlu4x3bpXLhqE+dOSeh0V60eW0TH+IXiRoUWGI4eQEsR1C
        9OPQk/yNebCStzxjvub+UQgybdqgLzwFyT9Oag0TwzJJMiyqVXG5s9doOPzJFefjHKtWa7aG1BKFNEDW
        EqxrKUYI33W7fn2ru/AniZpcwSnLKMox6kDqD6kV0KwoyeWVBTGNvbFeZTg2N/weI3BHurf/AFjVxpyw
        U41IvR6P+vyIclXi4ta9D16ikRsgEdDzS19GeWNdwASeAOT+FcBrXjKZnKwnYvqOv511/iGXbbv74H5m
        vMwmWJ9zW1OKerJbJC7yHLszH/aJP860tODIQyEqR3FRW9vWtbW9asQ+3mcMXDHcc5Prmp0JGST7nP8A
        9epFt+K8/wDG07ROYpZLllYAoMxhGz6kLk4PauatVVON2aQhzuxY8K6oG1F/SQzD/D9FrvEkxXiujal5
        E0cgGdjA49fWvXrDUUnjWSM/K3buPqK+bb6nsRS2NiKevN/G10HvW9lQH8v/AK9dZqGswwAmaRVwM7SR
        k/Qd68uv9W+0Tu6ggM2fp2ApVpSnDlFGKjK57n4ZufMtIG9UUflx/StOsfwhatHZQq3BC8/iSf61sV9B
        TvyK/Y8mfxOxheLpcQqPVv5A1w1rHXp17YpKu2QZH8voe1Yp8ExZzvk/Ot4z5VYhoxLWKte2hqdfCCDp
        LL/31/8AWqQeFx/z2m/76H+FNzCwACsPxRqESRESyQx5B2+bg/kvU/hVzxDZJaWs1xJNNtiRmxuHJA4H
        TucD8a+XrvxDJNK0szFnY5JJz9B9B0qXJNDWh2Em3fiNw6/38FR+Tc16f4CRJLGJgSGy4bBwVIYgjI6j
        /GvC7bVvevVfg7qe5LmPP3ZFcf8AbRQD+qmvKxWHhCHNE7aFWUpWZ13icRRWVxI43bYpDluedpAxnpyR
        XB+DtdsYmVrxHBGMFcMoPuOGH61q/GjWPKsBGDzNIox/sp85/ko/GvEv7Yang6UXHnaFiZtS5Uz6+0fx
        La3Q/wBHmjk/2QRuH1Q/MPyrUr4xt9fkR1dCVdSCrA4II9DX1X8PvFQ1Cwin/jxtkHo68H8+v416JxnR
        0UUUAFFFFAHNfEPwu2oWMlujlCxUg+u05wfUV4K/wN1IEjah98t/hX0/RQB8vj4Ial/dX82/wrsvhz4F
        vtPllaaPcrqownXKk4649TXt1FROCnHlZUJODujw74k+Bb/UZozFHtjjQgByc7mOScDI7AfhXH/8KP1L
        +6n5t/hX1DRThBQjyoJScndny9/wo7Uv7qfm3+FexfCLwJNpkEgmfLSsrbR0XAxx7n+ld/RVEn//2Q==
</value>
  </data>
</root>